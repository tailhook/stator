commands:

  cargo: !Command
    description: Run any cargo command
    container: ubuntu
    run: [cargo]

  make: !Command
    description: Build the library
    container: ubuntu
    run: [cargo, build]

  test: !Command
    description: Run unit tests
    container: ubuntu
    run: [cargo, test]

  example-carbon-py2: !Command
    description: "Run python example that submits some garbage to carbon"
    container: ubuntu
    environ: &pyenv
      PYTHONPATH: /work
      LD_LIBRARY_PATH: target/release
      CARBON_HOST: 127.0.0.1
    run: |
      set -ex
      cargo build --release
      exec python "examples/carbon.py"

  example-carbon-py3: !Command
    description: "Run python example that submits some garbage to carbon"
    container: ubuntu
    environ: *pyenv
    run: |
      set -ex
      cargo build --release
      exec python3 "examples/carbon.py"

  example-http-py2: !Command
    description: "Run python example that serves HTTP hello world"
    container: ubuntu
    environ: *pyenv
    run: |
      set -ex
      cargo build --release
      export RUST_LOG=debug
      exec python "examples/http_server.py"

  example-http-py3: &http-py3 !Command
    description: "Run python3 example that serves HTTP hello world"
    container: ubuntu
    environ: *pyenv
    run: |
      set -ex
      cargo build --release
      export RUST_LOG=debug
      exec python3 "examples/http_server.py"

  example-aiohttp-py3: !Command
    description: "Run asyncio/aiohttp example to compare performance"
    container: ubuntu
    environ: *pyenv
    run: [python3, "examples/bench-aiohttp.py"]

  example-tornado-py3: !Command
    description: "Run tornado HTTP example to compare performance"
    container: ubuntu
    environ: *pyenv
    run: [python3, "examples/bench-tornado.py"]

  example-uwsgi-py3: &uwsgi-py3 !Command
    description: "Run uwsgi HTTP example to compare performance"
    container: ubuntu
    environ: *pyenv
    run:
    - uwsgi
    - --http-socket=:3000
    - --wsgi-file=examples/uwsgi.py
    - --master
    - --processes=1
    - --threads=1
    - --disable-logging

  example-http-redis-py2: !Supervise
    description: "Run python example that serves HTTP with Redis"
    children:
      redis: &redis !Command
        container: redis
        run:
        - redis-server
        - --daemonize
        - no
        - --port
        - 3001
        - --unixsocket
        - /work/target/redis.sock
        - --databases
        - 4
        - --logfile
        - /dev/null
      py: !Command
        container: ubuntu
        environ: *pyenv
        run: |
          set -ex
          cargo build --release
          export RUST_LOG=debug
          exec python "examples/http_redis.py"

  example-http-redis-py3: !Supervise
    description: "Run python example that serves HTTP with Redis"
    children:
      redis: *redis
      py: !Command
        description: "Run python example that serves HTTP with Redis"
        container: ubuntu
        environ: *pyenv
        run: |
          set -ex
          cargo build --release
          export RUST_LOG=debug
          exec python3 "examples/http_redis.py"

  example-graphiti-py: !Command
    description: "Run alternative to carbon, pure-python graphiti example"
    container: graphiti
    environ:
      CARBON_HOST: 127.0.0.1
    run: [python, "examples/alternative-graphiti.py"]

  bench-stator-starvation: !Supervise
    description: Run a sequence of stator bencmarks
    children:
      stator: *http-py3
      bench: &bench !Command
        container: bench
        run: |
          sleep 5 # get time for python to start
          for rate in $(seq 10000 1000 25000); do
            wrk -d 10 -R $rate http://127.0.0.1:3000 --latency | awk '
              /50.000%/ { p50=$2; }
              /75.000%/ { p75=$2; }
              /99.000%/ { p99=$2; }
              /100.000%/ { max=$2; }
              /Requests\/sec:/ { real=$2; }
              END { print '$rate',real,p50,p75,p99,max; }
            '
            top -d1 | grep ^CPU: | head -n3 | tail -n+2
          done

  bench-uwsgi-starvation: !Supervise
    description: Run a sequence of uwsgi bencmarks
    children:
      stator: *uwsgi-py3
      bench: *bench

containers:

  ubuntu:
    setup:
    - !Ubuntu trusty
    - !UbuntuUniverse ~
    - !Install [make, checkinstall, wget, ca-certificates,
                libssl-dev, build-essential, python3-dev]

    - !TarInstall
      url: "http://static.rust-lang.org/dist/rust-1.7.0-x86_64-unknown-linux-gnu.tar.gz"
      script: "./install.sh --prefix=/usr \
               --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo"

    - !Py2Install [cbor]
    - !Py3Install [cbor]

    # These ones for examples
    - !PipConfig {dependencies: true}
    - !Py2Install [hiredis, redis]
    - !Py3Install [hiredis, redis, aiohttp, tornado, gevent, uwsgi]

    environ:
      HOME: /work/target
      USER: pc

  graphiti:
    setup:
    - !Alpine v3.3
    - !Install [ca-certificates]
    - !Py2Install [six, graphiti]

  bench:
    setup:
    - !Alpine v3.3
    - !Install [iptables, libgcc, iproute2]
    - !BuildDeps [build-base, openssl-dev]
    - !GitInstall
      url: https://github.com/giltene/wrk2
      script: |
        make
        cp wrk /usr/bin
    - !EnsureDir /vagga
    volumes:
      /vagga: !VaggaBin
    environ:
      PATH: /bin:/vagga:/sbin:/usr/bin

  redis:
    setup:
    - !Alpine v3.3
    - !Install [redis]
